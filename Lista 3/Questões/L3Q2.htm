<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta charset="utf-8">
	<title>IF672 [CIn-UFPE]</title>

	<link href="L3Q2_arquivos/style.css" rel="stylesheet" type="text/css">
	<link href="L3Q2_arquivos/notas.css" rel="stylesheet" type="text/css">

</head>
<body>
<script>
$ = function(id) {
	return document.getElementById(id);
}
hide_box = function (node) {
	node.parentNode.style.opacity = 0.0;
	return false;
}
hide_all_warnings = function () {
	$('notice_box').style.opacity = 0.0;
	$('error_box').style.opacity = 0.0;
}
scrolls_to = function(id) {
	var node = $('scroll_point_'+id);
	if (node)
		node.scrollIntoView();
}
window.onload = function() {
	setTimeout("hide_all_warnings()", 5000);
}
</script>

<div id="notice_box" style="opacity: 0.0; visibility: hidden;"><div class="warning_content" onclick="return hide_box(this);"></div></div>

<div id="error_box" style="opacity: 0.0; visibility: hidden;"><div class="warning_content" onclick="return hide_box(this);"></div></div>

<div id="navi">
	<div id="navi_shadow"></div>
	<ul id="navi_options">
		<div id="logo_cin"></div>
		<li onclick="window.location = 'http://moreno.cin.ufpe.br/~if672ec/index.php';">Home</li>
		<li onclick="window.location = 'http://moreno.cin.ufpe.br/~if672ec/index.php/home/pages/avisos.htm';">Avisos</li>
		<li onclick="window.location = 'http://moreno.cin.ufpe.br/~if672ec/index.php/home/pages/programacao.htm';">Cronograma</li>
		<li onclick="window.location = 'http://moreno.cin.ufpe.br/~if672ec/index.php/home/lists';">Listas</li>
		<li onclick="window.location = 'http://moreno.cin.ufpe.br/~if672ec/index.php/home/pages/aulasPraticas.htm';">Monitoria</li>
		<li onclick="window.location = 'http://moreno.cin.ufpe.br/~if672ec/index.php/home/pages/material.htm';">Material</li>
					<div id="login_button" onclick="window.location = 'http://moreno.cin.ufpe.br/~if672ec/index.php/home/login';">login</div>
			</ul>
	
</div>

<div id="content">

<ul id="browse">
	<li onclick="document.location = 'http://moreno.cin.ufpe.br/~if672ec/index.php/home/lists'">Listas</li>
	<li>L3Q2</li>
</ul>
	
<h1><strong>L3Q2</strong> - Barão de Porta Larga</h1>
<ul class="lista_menu">
	<!--<li>Código fonte: <strong>L3Q2.c</strong>, <strong>L3Q2.cpp</strong> ou <strong>L3Q2.java</strong></li>-->
	<li>Entrada: <strong>L3Q2.in</strong></li>
	<li>Saída: <strong>L3Q2.out</strong></li>
		<li style="background: #A22; top: -28px; float: right;" onclick="window.location='http://moreno.cin.ufpe.br/~if672ec/index.php/home/clarifications/60'"><strong>Clarifications</strong></li>
</ul>
<pre>Sabendo da discrepância na renda da população brasileira. Nossa querida presidenta decidiu pedir sua ajuda para criar um programa que faça uma redistribuição dessa renda. Sabendo que a presidenta pediu que fossem feitas transferências bancárias SEMPRE entre as contas da pessoa com mais dinheiro para a pessoa com menos dinheiro. E que cada transferência bancária deve ser de exatamente 3000 reais (Nem mais, nem menos). Crie um algoritmo que tenha como entrada o nome das pessoas e suas rendas e como saída indique, em cada transferência que deverá ser realizada, o remetente e o destinatário.
Exemplo:
Eike 10000             // Eike tem renda de 10000 reais
Lemann 19000      // Lemann tem renda de 18000 reais
Safra 11000	          // Safra tem renda de 11000 reais

// realizamos uma transferência da maior conta para a menor conta
// Logo Eike irá receber 3000 de Lemann

Eike 13000
Lemann 16000
Safra 11000

// Ainda podemos realizar outra transferência de 3000 de Lemann para Safra

Eike 13000
Lemann 13000
Safra 14000

//Agora não faz mais sentido realizar outra transferência, pois a diferença entre a 
// maior e a menor conta é menor que 3000 reais

//Portanto a saída do nosso programa seria:

Lemann -&gt; Eike
Lemann-&gt; Safra

Observações importantes:

1. Caso existam duas pessoas com a mesma quantia em dinheiro, uma possível transferência deverá ser realizada da pessoa com nome lexicograficamente menor.

Exemplo:

Safra 20000
Eike 20000
Lemann 10000

//nesse caso deverá ser feita então uma transação de Eike para Lemann
Eike -&gt; Lemann</pre>

<h2>Formato de Entrada</h2>
<pre>A entrada conterá diversos casos testes. A primeira linha de cada caso terá um
número natural N que indica a quantidade de contas. As próximas N linhas conterão uma string com o nome da pessoa que iremos cadastrar e a renda da pessoa. O final da entrada será sinalizado quando N for igual a 0.</pre>

<h2>Formato de Saída</h2>
<pre>Para cada caso teste imprima na primeira linha “Caso X” onde X representa o numero de caso atual. Nas próximas linhas imprima 2 strings, uma com o remetente da transferência e outro com o destinatário, imprima também uma seta “ -&gt; ” entre os nomes.  Deixe uma linha em branco apenas entre os casos.</pre>

<h2>Exemplos</h2>
<div class="questao_ex_in_out">
<div class="questao_input">
<pre>Entrada (<a href="http://moreno.cin.ufpe.br/%7Eif672ec/index.php/home/download_input/60"><strong>download</strong></a>):

3
Eike 10000
Lemann 19000
Safra 11000
0</pre>
</div>
<div class="questao_output">
<pre>Saída (<a href="http://moreno.cin.ufpe.br/%7Eif672ec/index.php/home/download_output/60"><strong>download</strong></a>):

Caso 1
Lemann -&gt; Eike
Lemann -&gt; Safra</pre>
</div>
</div>

</div>


</body></html>